version: '3.8'

services:

  db:
    image: postgres:15.3-alpine3.18
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend-db
    environment:
      - POSTGRES_USER:      ${POSTGRES_USER}
      - POSTGRES_PASSWORD:  ${POSTGRES_PASSWORD}
      - POSTGRES_DB:        ${POSTGRES_DB}

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    networks:
      - backend-db
    environment:
      - PGADMIN_DEFAULT_EMAIL:    ${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db


  #dev side
  backend-dev:
    build:
      context: ./backend
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - backend-db
      - frontend-backend
    environment:
      - POSTGRES_HOST:      ${POSTGRES_HOST}
      - POSTGRES_PORT:      ${POSTGRES_PORT}
      - POSTGRES_USER:      ${POSTGRES_USER}
      - POSTGRES_PASSWORD:  ${POSTGRES_PASSWORD}
      - POSTGRES_DB:        ${POSTGRES_DB}

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: dockerfile.dev
    restart: always
    ports:
      - "3001:3001"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - frontend-backend

networks:
  backend-db:
    driver: bridge
  frontend-backend:
    driver: bridge

volumes:
  db-data: